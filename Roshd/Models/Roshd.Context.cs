//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Roshd.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class RoshdEntities : DbContext
    {
        public RoshdEntities()
            : base("name=RoshdEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<City> Cities { get; set; }
        public DbSet<County> Counties { get; set; }
        public DbSet<Country> Countries { get; set; }
        public DbSet<DepartmentOfEducation> DepartmentOfEducations { get; set; }
        public DbSet<District> Districts { get; set; }
        public DbSet<EducationalCrossSection> EducationalCrossSections { get; set; }
        public DbSet<EducationalField> EducationalFields { get; set; }
        public DbSet<FileExtension> FileExtensions { get; set; }
        public DbSet<Honor> Honors { get; set; }
        public DbSet<JobRecordsInOrganization> JobRecordsInOrganizations { get; set; }
        public DbSet<JobRecordsOutOfOrganization> JobRecordsOutOfOrganizations { get; set; }
        public DbSet<MemberEducation> MemberEducations { get; set; }
        public DbSet<Organization> Organizations { get; set; }
        public DbSet<PresentedArticle> PresentedArticles { get; set; }
        public DbSet<Province> Provinces { get; set; }
        public DbSet<PublishedArticle> PublishedArticles { get; set; }
        public DbSet<SpecializedExperience> SpecializedExperiences { get; set; }
        public DbSet<Thesis> Theses { get; set; }
        public DbSet<ApplicationMenu> ApplicationMenus { get; set; }
        public DbSet<ApplicationPage> ApplicationPages { get; set; }
        public DbSet<Authorization> Authorizations { get; set; }
        public DbSet<LookupControlForDelete> LookupControlForDeletes { get; set; }
        public DbSet<PagePartElement> PagePartElements { get; set; }
        public DbSet<PagePatr> PagePatrs { get; set; }
        public DbSet<RoleLevel> RoleLevels { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<MemberResponsibility> MemberResponsibilities { get; set; }
        public DbSet<MemberShip> MemberShips { get; set; }
    
        public virtual ObjectResult<string> Key()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Key");
        }
    
        public virtual ObjectResult<Nullable<int>> spLookupsControlForDelete(string pTable, string pField, string pCode, string memberID)
        {
            var pTableParameter = pTable != null ?
                new ObjectParameter("PTable", pTable) :
                new ObjectParameter("PTable", typeof(string));
    
            var pFieldParameter = pField != null ?
                new ObjectParameter("PField", pField) :
                new ObjectParameter("PField", typeof(string));
    
            var pCodeParameter = pCode != null ?
                new ObjectParameter("PCode", pCode) :
                new ObjectParameter("PCode", typeof(string));
    
            var memberIDParameter = memberID != null ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spLookupsControlForDelete", pTableParameter, pFieldParameter, pCodeParameter, memberIDParameter);
        }
    }
}
